{"schedule": {"version": "1.11", "base_url": "https://pretalx.evolutio.pt/djangocon-europe-2022/schedule/", "conference": {"acronym": "djangocon-europe-2022", "title": "DjangoCon Europe 2022", "start": "2022-09-21", "end": "2022-09-23", "daysCount": 3, "timeslot_duration": "00:05", "time_zone_name": "Europe/Lisbon", "rooms": [{"name": "Auditorium", "guid": null, "description": "Super Bock Arena Auditorium", "capacity": 530}, {"name": "Workshops", "guid": null, "description": null, "capacity": null}], "days": [{"index": 1, "date": "2022-09-21", "day_start": "2022-09-21T04:00:00+01:00", "day_end": "2022-09-22T03:59:00+01:00", "rooms": {"Auditorium": [{"id": 398, "guid": "f1f7f660-98ab-5012-b31e-efa8ee634a4f", "logo": "", "date": "2022-09-21T09:00:00+01:00", "start": "09:00", "duration": "00:15", "room": "Auditorium", "slug": "djangocon-europe-2022-398-welcome-session", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/UKB8YC/", "title": "Welcome Session", "subtitle": "", "track": null, "type": "Other", "language": "en", "abstract": "Welcome Session", "description": "Video: https://youtu.be/0kOLsFQGxyk", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"id": 393, "guid": "f0967f7f-bc7d-5530-9ba2-e9b41519615d", "logo": "", "date": "2022-09-21T09:15:00+01:00", "start": "09:15", "duration": "01:00", "room": "Auditorium", "slug": "djangocon-europe-2022-393-keynote-improving-contributor-experience-broadening-contributor-scope", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/TKE3E3/", "title": "Keynote: Improving Contributor Experience & Broadening Contributor Scope", "subtitle": "", "track": null, "type": "Keynote", "language": "en", "abstract": "I'll be proposing a new category of code contributor I'm calling \"Code Contributor Mentor\", and also enumerating the need to recognize, recruit & support non-code contributors.", "description": "As a largely volunteer-driven community, the Django code base and community rely on their contributors. In this talk I'll focus on two different categories of contributors the Django community needs:\r\n- Code Contributors\r\n- Non-Code Contributors\r\n\r\nThe first part of the talk will propose a new category of code contributor: _Code Contributor Mentors_. These contributors are meant to provide an intermediate layer of support. They would benefit both current project maintainers (who are often overworked volunteers) and potential new contributors (who are often overwhelmed with how/where to start or continue).\r\n\r\nThe second part of the talk will focus on the often-overlooked need for non-code contributors. Django (as well as Python and other related projects) are large enough that they need contributions beyond code.  These contributions range from needs on the global level, on the DSF & PSF boards, to local meetups & conferences. But these needs are often overlooked since they're not code-related.\r\n\r\nThe goal of the talk is to both raise awareness of issues, but also propose potential solutions.\r\n\r\nVideo: https://youtu.be/tfRcEFIWmUA", "recording_license": "", "do_not_record": false, "persons": [{"id": 411, "code": "LGEYVU", "public_name": "Kojo Idrissa", "biography": "After a career as an accountant and a university instructor, Kojo became a software developer. He's been active in the Python & Django communities since 2013, a DjangoCon US organizer since 2016 & the DEFNA North American Ambassador since 2017. He's currently a software engineer at [REVSYS](https://twitter.com/revsys). He has been fortunate enough to have spoken at multiple conferences in multiple countries and is excited to come to mainland Europe for the first time.\r\n\r\nYou can find Kojo on Twitter [@KojoIdrissa](https://twitter.com/KojoIdrissa). He's into a lot of disparate things, so...\ud83e\udd37\ud83c\udffe\u200d\u2642\ufe0f", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 183, "guid": "340e849c-5d02-5436-95d0-ec953051aa1c", "logo": "/media/djangocon-europe-2022/submissions/DVCGPD/DAP_Porto_2ZukFJe.png", "date": "2022-09-21T10:15:00+01:00", "start": "10:15", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-183-hidden-gems-of-django-admin-part-1-", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/DVCGPD/", "title": "Hidden gems of Django Admin. Part 1.", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "In my presentation I will talk about how powerful django.contrib.admin really is. This is the first part of a series of presentations. For beginners and advanced developers.", "description": "The Django Admin Panel is a complex and bad-documented tool in the Django that can greatly speed up development if you start to understand it.\r\n\r\n- \"Isn't it easier for us to write our Backend?\"\r\nI will answer: \u201cNo, it\u2019s not easier!\u201d.\r\nSeven years of insights and discoveries in my report.\r\n\r\nThe following questions should be in this conversation:\r\n1. Django admin panel as it could be.\r\n2. Django admin sites multiplication.\r\n2. ModelAdmin, How to remove the legacy of older versions of Django.\r\n4. AdminActions based on Generic-CBV, simplicity and convenience.\r\n5. Undocumented Django.contrib.admin features.\r\n6. Using Django Admin Panel for third-party Backend implementations.\r\n\r\nThe next part of this series of talks will take place at Django Con US 2022. For advanced and experienced developers.\r\n\r\nVideo: https://youtu.be/HJfPkbzcCJQ", "recording_license": "", "do_not_record": false, "persons": [{"id": 285, "code": "JUGPGE", "public_name": "Maxim Danilov", "biography": "23 Years in software development, 8 years with Django.\r\nProgramming languages stack: RISC Assembly Language, C, ASP, VB/VBA, PHP, HTML/CSS, VueJS/NuxtJS, Python\r\nProbably, i have the best knowledge in raw Django in Russian community.\r\nI live in Austria in Tirol. I am also Alpine Ski and x-cross-country Instructor.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 304, "guid": "25364fc5-4bdb-5442-8b3d-866a1f4ddaf8", "logo": "", "date": "2022-09-21T11:15:00+01:00", "start": "11:15", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-304-experimenting-with-file-based-routing-in-django", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/RNGQXV/", "title": "Experimenting with file-based routing in Django", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "File-system based routing has been widely used in JavaScript web frameworks\r\nsuch as Next.js, NuxtJS, Remix, Gatsby, and SvelteKit.\r\n\r\nWith file-system based routing, the URL structure of your web application\r\nis defined by the structure of the codebase. This makes it easier to find the\r\nview that handles a certain path, and vice versa.\r\n\r\nThis talk will explore an experiment that implements file-based routing in a Django project.", "description": "File-system based routing has been widely used in JavaScript web frameworks\r\nsuch as [Next.js][nextjs], [NuxtJS][nuxtjs], [Remix][remix], [Gatsby][gatsby], and [SvelteKit][sveltekit].\r\nIt works by scanning the files in a specific directory (e.g. `pages`) and mapping the\r\ndefault export of each file to a URL route in the web application.  This means that each\r\nURL path corresponds to a single view file under the same path in your codebase.\r\n\r\nMeanwhile, in Django, URL routes are traditionally defined in a `urls.py` file in the\r\nproject directory. You can separate the `urls.py` into multiple different files and use\r\n`include()` to bring them all together. However, you still have to explicitly define each\r\npath and the view it corresponds to.\r\n\r\nIn this talk, we'll explore how we can implement file-based routing in a Django project to\r\nautomatically generate URL paths based on your file structure, as well as the challenges\r\nthat come with it.\r\n\r\nThe talk will be structured as follows:\r\n- What file-system based routing is and why it can be useful\r\n- How it works in other web frameworks\r\n- How it may work in Django\r\n- How it can be implemented\r\n- What challenges we'll face and how to overcome them\r\n- What possible improvements and new ideas we can bring\r\n- How you can use it in your project\r\n\r\nResources:\r\n- [Slides][slides]\r\n- [Repository][repository]\r\n\r\n[nextjs]: https://nextjs.org/docs/routing/introduction\r\n[nuxtjs]: https://nuxtjs.org/docs/features/file-system-routing/\r\n[remix]: https://remix.run/docs/en/v1/guides/routing\r\n[gatsby]: https://www.gatsbyjs.com/docs/reference/routing/file-system-route-api/\r\n[sveltekit]: https://kit.svelte.dev/docs/routing\r\n[slides]: https://slides.laymonage.com/fs-paths\r\n[repository]: https://github.com/laymonage/django-fs-paths\r\n\r\nVideo: https://youtu.be/_2VZ9AOXblY", "recording_license": "", "do_not_record": false, "persons": [{"id": 12, "code": "7ZHWE7", "public_name": "Sage Abdullah", "biography": "I'm Sage and I'm from Jakarta, Indonesia.\r\n\r\nIn 2019, I participated in Google Summer of Code with Django, during which I implemented the [cross-database `JSONField`](https://docs.djangoproject.com/en/4.0/ref/models/fields/#jsonfield) that became available in Django 3.1.\r\n\r\nNow, I work as a Developer at Torchbox, building new features and improvements to [Wagtail CMS](https://wagtail.org) and its ecosystem.\r\n\r\nOutside of the Django world, I maintain my project [giscus](https://giscus.app), a comment system powered by GitHub Discussions.\r\n\r\nI write weekly logs on [my personal website](https://laymonage.com) and learn guitar in my free time. You can find me @laymonage on [GitHub](https://github.com/laymonage), [Twitter](https://twitter.com/laymonage), and other sites. I'd love to make friends from around the world, so hit me up!", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 306, "guid": "acf2d0de-63eb-5299-82e0-a5131cd23a9b", "logo": "/media/djangocon-europe-2022/submissions/TKBMTH/hacker_0Vmok2u.jpg", "date": "2022-09-21T11:50:00+01:00", "start": "11:50", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-306-add-multi-factor-authentication-mfa-to-django-in-mere-minutes", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/TKBMTH/", "title": "Add Multi-Factor Authentication (MFA) to Django in Mere Minutes", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Passwords alone can\u2019t protect us. We need multi-factor authentication, which doesn\u2019t come with Django out of the box. But we can add MFA to our Django projects in just a few minutes, giving our users the ability to protect their accounts with Touch ID, security keys, and one-time passwords.", "description": "Passwords alone can\u2019t protect us. Can\u2019t protect our bank accounts or medical records \u2014 our most sensitive data.\r\n\r\nWe need multi-factor authentication, which doesn\u2019t come with Django out of the box. But we can add MFA to our Django projects in just a few minutes, giving users the ability to add multiple factors in addition to their password:\r\n\r\n* time-based one-time passwords (TOTP)\r\n* hardware security keys, including Touch ID (WebAuthn)\r\n* backup emergency codes\r\n\r\nAmong the MFA options available for Django include [Kagi](https://github.com/justinmayer/kagi), an open-source project that builds upon the work that a team of security professionals undertook to add multi-factor authentication to the Python Package Index (PyPI).\r\n\r\nAttendees of this talk will take home the following knowledge and skills:\r\n\r\n* why multi-factor authentication is so important\r\n* steps needed to add MFA to a Django project\r\n* how to customize templates for MFA-related views\r\n* adding TOTP to a phone for easy logins on-the-go\r\n* how to use Touch ID as second factor\r\n* browser vendor plans for logins without passwords\r\n\r\nVideo: https://youtu.be/aannTf_z1XU", "recording_license": "", "do_not_record": false, "persons": [{"id": 359, "code": "XY7L8Z", "public_name": "Justin Mayer", "biography": "Justin Mayer is a serial entrepreneur, active open-source contributor, and advocate for stronger security and privacy. His latest project is [Fortressa.com](https://fortressa.com), which provides one-tap installation of open-source projects, replacing expensive SaaS products with self-hosted alternatives that protect user privacy. He also maintains the [Pelican static site generator](https://github.com/getpelican/pelican) as well as a number of other projects for Python and the Fish shell.\r\n\r\nJustin speaks fluent Japanese, graduated with honors from the University of California, Berkeley, and received his M.B.A. from the Wharton School of Business.\r\n\r\nHe writes about security and privacy on the web at [justinmayer.com](https://justinmayer.com) and via [@JMayer on Twitter](https://twitter.com/jmayer).", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 217, "guid": "bece4393-6046-564d-b4f6-a2b74187d232", "logo": "", "date": "2022-09-21T12:25:00+01:00", "start": "12:25", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-217-introducing-django-ninja", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/FAZTAT/", "title": "Introducing Django Ninja", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Django Ninja is the quickest way to build REST APIs, that will be fast, secure and documented automatically.", "description": "I'm the author of Django Ninja - a framework for creating REST APIs built on top of Django.\r\n\r\nThe core feature is a type-hints based API\u2019s declaration that automatically generates OpenAPI/swagger documentation.\r\n\r\nWhile being simple it gives high performance both on single thread parsing and in hight concurrent load thanks to async support.\r\n\r\nIt is new, but already used in production by multiple companies.\r\nDuring the talk I will walk you through a demo and show you all primary features.\r\n\r\nVideo: https://youtu.be/zpR1QCLBpIA", "recording_license": "", "do_not_record": false, "persons": [{"id": 199, "code": "CRCESG", "public_name": "Vitaliy Kucheryaviy", "biography": "Making software for almost 20 years\r\nOpen source developer", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 325, "guid": "4f667746-21d1-5e17-a74d-ad7c06bfb493", "logo": "", "date": "2022-09-21T14:00:00+01:00", "start": "14:00", "duration": "01:00", "room": "Auditorium", "slug": "djangocon-europe-2022-325-keynote-scaling-from-one-to-billions", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/ST9NLK/", "title": "Keynote: Scaling from One to Billions", "subtitle": "", "track": null, "type": "Keynote", "language": "en", "abstract": "This talk ties the core components of what makes a good Django/Python/whatever developer into activities that can affect billions of people. The volume of lives affected raises ethical questions, for as Ian Malcolm says, \u201cYour scientists were so preoccupied with whether or not they could, they didn\u2019t stop to think if they should.\u201d", "description": "Video: https://youtu.be/EHedUWYkSwA", "recording_license": "", "do_not_record": false, "persons": [{"id": 365, "code": "JG8Y8K", "public_name": "Daniel Roy Greenfeld", "biography": "Daniel Roy Greenfeld is a senior software engineer with over 25 years professional experience. He began his Python and Django journey working with NASA. He has created/co-created/maintained open source projects such as Cookiecutter, django-crispy-forms, Cookiecutter Django, Django Packages, cached-property, and lots more. A passionate writer, most of his public works can be found at https://daniel.feldroy.com and he is a co-author of the venerable Two Scoops of Django series of books.\r\n\r\nDaniel is husband to Audrey Roy Greenfeld, creator of the Cookiecutter project/ecosystem, co-author of Two Scoops of Django, and one of the original founders of PyLadies. Together Daniel and Audrey raised their daughter in Los Angeles, California, USA.\r\n\r\nAs a father and a human Daniel is very passionate about using his skills and talents to address climate change, hence why he works for Octopus Energy as Director of US Engineering.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 238, "guid": "9fd9c305-205f-5b0d-bc07-164d90bd6af8", "logo": "", "date": "2022-09-21T15:00:00+01:00", "start": "15:00", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-238-deep-inside-django-s-orm-how-django-builds-queries", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/GZDHYB/", "title": "Deep Inside Django's ORM: How Django Builds Queries", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Django's ORM is probably the most powerful feature of this framework. This talk is about how queries to the database are internally translated into SQL with Query objects and how to hack that process.", "description": "In this talk, we will have a deeper look at the fundamentals of Django's ORM.\r\n\r\nThe first part is about Query objects (`django.db.models.sql.query.Query`) and how Django uses them to map QuerySets to SQL. In this part, we will also see how Expressions (from `django.db.models.expressions`) work, how related fields are managed by Django internally, and how aggregate functions are handled.\r\n\r\nThe second part of the talk provides some creative ways to leverage these insights in real-world projects to customize queries, build dynamic queries and improve performance.\r\n\r\nVideo: https://youtu.be/OEN5wONsaYU", "recording_license": "", "do_not_record": false, "persons": [{"id": 319, "code": "JPWU8P", "public_name": "Bas Steins", "biography": "Bas is a software developer for more than 15 years. His first contact with Django was in 2008, even before the 1.0 was released. As a freelance software developer, consultant and tech trainer, he enjoys helping all sorts of tech teams to explore new technologies and get their job done.\r\n\r\nHe is on Twitter [@bascodes](https://twitter.com/bascodes) and blogs at [bas.codes](https://bas.codes)", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 312, "guid": "ed9f3a11-4cbf-57d3-a45d-90207ab5e970", "logo": "", "date": "2022-09-21T16:00:00+01:00", "start": "16:00", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-312-component-driven-ui-development-with-django-and-storybook", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/YHUWBL/", "title": "Component-driven UI development with Django and Storybook", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "In the modern JavaScript landscape, component-focused UI frameworks are the norm. We\u2019ll look at how the team behind Wagtail brought component-driven development from React to Django templates with Storybook, speeding up the development process and simplifying maintenance of large pattern libraries.", "description": "Django doesn't have many opinions about front-end development. This is a blessing and a curse -- it means a lot of freedom for projects to approach UIs however they see fit, but also a lot of choices to make on each and every project. It also means the Django ecosystem is lagging far behind more modern platforms.\r\n\r\nIt doesn't have to be this way. The team behind the Wagtail CMS spent a lot of time refining how they approach UI development in the context of Django projects, and we'll now get to learn from their experience.\r\n\r\nWe started with workflows that work well with React: components are first-class citizens, and tools like Storybook playing to those strengths. We then adapted this for Django, building a full-fledged design system and making the most of automation to test our user interface.\r\n\r\nIn this talk we'll cover,\r\n\r\n-   Component-driven development as a methodology\r\n-   Tools we used and created to apply those concepts to Django codebases\r\n-   Demo time! How we use those tools to build our CMS, Wagtail\r\n-   How we envision the Django ecosystem evolving\r\n\r\nThis should generally be a beginner-level talk for Django developers. Developers who are mostly focused on back-end work will learn about modern front-end methodologies. We will make some references to popular JavaScript frameworks (React, Vue), but no prior knowledge with those will be required.\r\n\r\nVideo: https://youtu.be/fke3NYdnPBs", "recording_license": "", "do_not_record": false, "persons": [{"id": 73, "code": "FGTHLQ", "public_name": "Thibaud Colas", "biography": "I\u2019m a developer interested in all things accessibility, working at Torchbox in the UK. I\u2019m a core contributor to Wagtail, and part of Django\u2019s accessibility team.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 315, "guid": "8b5b925d-96c5-56b5-b128-394c7856dcac", "logo": "", "date": "2022-09-21T16:35:00+01:00", "start": "16:35", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-315-the-windy-path-to-fast-pain-free-reproducible-developer-environments", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/EEPJN7/", "title": "The windy path to fast, pain-free, reproducible developer environments", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "How we extricated ourselves from a world of thorny, slow developer onboarding and daily MacOS Docker-compose file sync performance issues. And how you can too.", "description": "If you\u2019ve been part of a team developing with Django you will be familiar with the woes of local development across multiple operating systems. \u201cDocker is melting my new Macbook\u201d, \u201cWhat is zlib and how do I get it?\u201d, \u201cThe backend is just returning HTTP 502???\u201d..\r\n\r\nDocker & Compose promised to solve it all, and did get most of the way there for us - but we were left with huge performance issues when file syncing a multi-million line repo on non-native *nix systems: namely MacOS. We were left with modern machines that resembled fancy paper weights.\r\n\r\nThe issues became such a daily problem for us at YunoJuno that they got in the way of shipping, so we went on the hunt for alternative setups and discovered the incredible powers of native, reproducible builds with the Nix ecosystem alongside the potential intriguing benefits of cloud-based development.\r\n\r\nThis talk will be a journey through the issues we faced, a deep dive into the avenues we went down and all the trade offs we faced on our way to finding something that worked for us. The end result helps our devs ship correct code faster by spending less time faffing with local development pains.\r\n\r\nVideo: https://youtu.be/Mx3yiE_CJOY", "recording_license": "", "do_not_record": false, "persons": [{"id": 342, "code": "YDKKA3", "public_name": "Darian Moody", "biography": "Head of Platform Engineering @ YunoJuno; we're using Django to help change the future of freelancer work. I love working at the intersection of development, teams & delivery and enjoy building out the practices & culture required to make successful software. Outside of Python my loves include Elixir, distributed systems and jungle.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 243, "guid": "c2914056-72f5-5990-b4c1-5def76135673", "logo": "", "date": "2022-09-21T17:10:00+01:00", "start": "17:10", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-243-the-hack-behind-the-curtain-deploying-a-multitenant-django-application-to-more-than-1600-stores", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/8X37KK/", "title": "The hack behind the curtain! Deploying a Multitenant Django application to more than 1600 stores", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Data isolation is key when working with bounded physical tenants like grocery stores. All the APIs and data are tenant dependent and we don't want to mix them between stores. This is the tale of the yellow brick road to multitenancy and how a Django project hack became an open-source library for everyone to use. The hack behind the curtain, welcome to Oz!", "description": "In MercadonaTech we have online orders preparation warehouses called hives. We have evolved and optimized the tools used in these facilities over the last 5 years and we were ready to bring them to our stores where we planned to prepare online orders as well. But we had one little problem, we wanted to move from 3 isolated warehouses to more than 1600 stores. And until that moment, all the logic we developed for them didn't expect data from other centres, we had simple on-premise deployments for each hive and different databases that did not share data between them. That was a problem.\r\n\r\nThis is a story of wonder that tells how we hacked Django's ORM to automagically isolate the data from different stores and how we converted this messy hack into an amazing open-source library you can use to implement your own multitenant applications. The hack behind the curtain, welcome to Oz!\r\n\r\nVideo: https://youtu.be/_9vMEAHNmHE", "recording_license": "", "do_not_record": false, "persons": [{"id": 325, "code": "AYA3UU", "public_name": "Emilio Carri\u00f3n", "biography": "Staff Engineer @ MercadonaTech. Machine Learning enthusiast. PDD (Python Driven Developer). \r\nDoctoral student @ Universitat Polit\u00e9cnica de Valencia.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 403, "guid": "6420d453-0d38-5f36-a9db-45e3126f2af6", "logo": "", "date": "2022-09-21T17:45:00+01:00", "start": "17:45", "duration": "00:45", "room": "Auditorium", "slug": "djangocon-europe-2022-403-lightning-talks", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/P9NRKD/", "title": "Lightning Talks", "subtitle": "", "track": null, "type": "Other", "language": "en", "abstract": "Lightning Talks", "description": "Video: https://youtu.be/XTSQiPrAz08", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}], "Workshops": [{"id": 187, "guid": "efdfed8b-b96b-59e7-a93f-9ec71a531c94", "logo": "", "date": "2022-09-21T11:15:00+01:00", "start": "11:15", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-187-bulletproof-python-property-based-testing-with-hypothesis", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/H8EJBJ/", "title": "Bulletproof Python \u2013 Property-Based Testing with Hypothesis", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "Property-based testing is a great benefit to the robustness and maintainability of your software. Yet, the technique is still vastly underused in the Python community. The workshop gives a hands-on introduction to Hypothesis and practices different approaches for writing property-based tests for Django applications.", "description": "Do you find yourself working through pages of copied and pasted tests to accommodate a simple code change? Does your software frequently break in unexpected ways despite your testing efforts? Don\u2019t despair! Property-based testing could be your way out of that mess. Rather than working harder and writing more test code, property-based testing forces you to work smarter and test more code with fewer tests.\r\n\r\nTraditional tests are example-based. They require the developer to come up with arbitrary inputs and check a system\u2019s behavior against explicit outputs. More often than not, developers only think of inputs that are handled correctly by their code, thus leaving bugs hidden. Property-based tests generate the inputs for you and in many cases they\u2019re more likely to find invalid inputs than humans. The difficulty lies in formulating these test cases.\r\n\r\nAfter this workshop you\u2019ll be comfortable with property-based testing using Hypothesis. You\u2019ll have experience requesting appropriate test data from Hypothesis and in writing tests for common and more advanced properties. At work, your co-workers will be impressed by your unbreakable code ;)\r\n\r\nParticipants are expected to have basic familiarity with unit testing and a testing framework. Provided code examples use pytest.", "recording_license": "", "do_not_record": false, "persons": [{"id": 286, "code": "NCQJCQ", "public_name": "Michael Seifert", "biography": "Michael is a consulting software engineer who helps product teams to develop Python software in the cloud. He worked with many different teams from various industries, but none of them practised property-based testing and only few were familiar with the concept.\r\n\r\nThis prompted him to spread the word about property-based testing and Hypothesis in an effort to help others write more robust and maintainable software.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 194, "guid": "fde4eebd-d9a2-5cad-ae6f-42b2ec030e48", "logo": "", "date": "2022-09-21T12:10:00+01:00", "start": "12:10", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-194-build-a-production-ready-graphql-api-using-python", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/FXNXPV/", "title": "Build a production ready GraphQL API using Python", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "This workshop will teach you how to create a production ready GraphQL API using Python and Strawberry. We will be using using Django as our framework of choice, but most of the concept will be applicable to other frameworks too.\r\n\r\nWe'll learn how GraphQL works under the hood, and how we can leverage type hints to create end to end type safe GraphQL queries.\r\n\r\nWe'll also learn how to authenticate users when using GraphQL and how to make sure our APIs are performant.\r\n\r\nIf we have enough time we'll take a look at doing realtime APIs using GraphQL subscriptions and how to use GraphQL with frontend frameworks such as React.", "description": "Agenda of the worshop\r\n\r\n- Workshop introduction\r\n\t- The introduction will explain the goal of the workshop and make sure everyone is ready to start\r\n- Intro to type hints\r\n\t- Before looking at what GraphQL is, we'll do a short introduction on type hints in Python, since we'll be using the a lot during the workshop.\r\n- Introduction to GraphQL\r\n\t- Here we'll be looking at what GraphQL is, how it works and why it has been created\r\n- Our first GraphQL API\r\n\t- Here we'll get our hands dirty by creating our first GraphQL API using Strawberry. We'll also take time to see how to configure Strawberry with Django.\r\n- Let's test our API\r\n\t- I'm a big fan of TDD, so before continuing with our workshop we'll quickly see how to test our GraphQL API using pytest.\r\n- Schema design\r\n\t- In this section we'll spend time taking a look at how to design a GraphQL schema. We'll also understand the difference between queries and mutations.\r\n- Authentication\r\n\t- In this section we'll implement authentication to our GraphQL API. We'll discuss session based auth vs JWT authentication.\r\n- **Bonus**\r\n   - Performance / Monitoring / Observability\r\n\t- In this section we'll discuss how we can add observability/monitoring to our APIs and make sure we can keep our API performant over time.\r\n\t- We'll also see how we can use dataloaders to make our queries efficient. We'll also talk about other potential performance improvements (SQL optimisation, Static Queries and more)\r\n\r\n\t- Integration with React\r\n\t\t- In this section we'll see how we can use GraphQL with a frontend framework like React.\r\n\t- Subscriptions\r\n\t\t- In this section we'll see what subscriptions are in GraphQL and how you can leverage them to build realtime APIs.", "recording_license": "", "do_not_record": false, "persons": [{"id": 206, "code": "MCQ8YW", "public_name": "Patrick Arminio", "biography": "\u00a1Hello there! I'm Patrick, a Swiss-Italian living in London.\r\n\r\nI'm currently mainly working on Strawberry \ud83c\udf53, a modern Python library for GraphQL. I'm a huge fan of GraphQL and also a Python user for more than 10 years now, so I'm super excited to contribute to the GraphQL ecosystem in Python.\r\n\r\nI'm also the Chair of Python Italia, the association that organises events around Python in Italy, I'm currently working on the new website for the conference with some friends.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 313, "guid": "1237ef99-02f6-5ed5-89e9-2ff2350d9ecb", "logo": "", "date": "2022-09-21T16:00:00+01:00", "start": "16:00", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-313-introduction-to-ditaxis", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/NRNF8P/", "title": "Introduction to Di\u00e1taxis", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "Over the last year, the [Di\u00e1taxis documentation framework](https://diataxis.fr) has taken off in popularity. This workshop provides a brief introduction to the framework, and includes a number of hands-on exercises.", "description": "I have run this workshop about 20 times in the last year; it's thoroughly road-tested with a wide range of audiences. \r\n\r\nIt gives participants the opportunity to work though key aspects of the Di\u00e1taxis framework in a structured, collaborative context.", "recording_license": "", "do_not_record": false, "persons": [{"id": 224, "code": "FDRCZ3", "public_name": "Daniele Procida", "biography": "I'm a Director of Engineering at Canonical, where I am working to transform documentation practice across 40-plus engineering teams. I love Django, DjangoCons and documentation (I am the author of the [Di\u00e1taxis documentation framework](https://diataxis.fr/)).\r\n\r\nI think it would be better to humanise software than softwarise humans.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 321, "guid": "a061d3c3-4fa5-521d-8cc9-e179942ade4a", "logo": "", "date": "2022-09-21T16:55:00+01:00", "start": "16:55", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-321-demystifying-modern-javascript-using-vue-js", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/DDCFN8/", "title": "Demystifying Modern JavaScript using Vue.js", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "Learn about modern JavaScript through a practical example. We will build a Vue.js application from scratch: a note taking app for DjangoCon. This will give us some much needed context to help us learn about modern JavaScript, its ecosystem, the frontend frameworks and more.", "description": "The workshop is about building a Vue.js application from scratch: a note taking app for DjangoCon.\r\n\r\nYou will learn about the basics of:\r\n  - Modern JavaScript\r\n  - its ecosystem, and common tooling\r\n  - frontend frameworks (on the example of Vue.js): why they are useful and when to use them\r\n\r\nWe will build a Vue.js app and cover:\r\n  - Tooling\r\n  - Data binding/Reactivity\r\n  - Templates\r\n  - Components\r\n  - Fetching and sending data\r\n\r\nGiven the short duration of the workshop, we will cover basics and won't get a chance to dive deep.\r\n\r\nThe main goal of the workshop is for you to walk away confident in being able to explore and work with modern JavaScript / frontend frameworks.\r\n\r\nThis workshop is intended for developers with little or no JavaScript experience (especially with modern JavaScript). Some JavaScript knowledge is welcome, but not necessary at all.\r\nIf you have a lot of experience with frontend frameworks, this workshop is probably not for you.\r\n\r\nIf you're attending, please take a look at [the Github repo](https://github.com/zanderle/Demystifying-Modern-JS) and make sure you have Node 14.18+ or 16+ installed.", "recording_license": "", "do_not_record": false, "persons": [{"id": 85, "code": "DEACNU", "public_name": "\u017dan Anderle", "biography": "I am a DSF Board member, a consultant and a full stack web engineer with a passion for user experience. I'm most proficient in Django, Python, and JavaScript, Vue and React. I always strive for elegant code and excellent products, and deeply care about users, coworkers, and the community.\r\n\r\nWhen I\u2019m not coding, I enjoy spending time with my SO and our 2 kids, and my favorite pastime is playing board games with my friends.", "answers": []}], "links": [], "attachments": [], "answers": []}]}}, {"index": 2, "date": "2022-09-22", "day_start": "2022-09-22T04:00:00+01:00", "day_end": "2022-09-23T03:59:00+01:00", "rooms": {"Auditorium": [{"id": 399, "guid": "0ea3a6c9-4ec2-58a2-a775-d71977473707", "logo": "", "date": "2022-09-22T09:00:00+01:00", "start": "09:00", "duration": "00:05", "room": "Auditorium", "slug": "djangocon-europe-2022-399-morning-announcements", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/HH8XEG/", "title": "Morning Announcements", "subtitle": "", "track": null, "type": "Other", "language": "en", "abstract": "Morning Announcements", "description": "", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"id": 250, "guid": "e07d4eb2-bd5e-5ad3-a5c3-f9856d72c04f", "logo": "", "date": "2022-09-22T09:05:00+01:00", "start": "09:05", "duration": "01:00", "room": "Auditorium", "slug": "djangocon-europe-2022-250-keynote-what-should-you-have-to-worry-about", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/EE3XCD/", "title": "Keynote: What should you have to worry about", "subtitle": "", "track": null, "type": "Keynote", "language": "en", "abstract": "As a Django developer, there are things you *need* to worry about. Keeping up to date with Django trends and best practices is one thing, but what about all the other parts of technology that are incessantly advertised towards you? What *should* you have to worry about?", "description": "This keynote will explore some recent popular trends in open source software and development, and assess their relevance to a Django developer. There may be some things that you may want to try out, but there's a difference between learning more for expanding your knowledge, and things that you must do. \r\n\r\nWhile trends are always changing, this keynote will focus on three main pillars: architecture, software, and community. \r\n\r\nYou will come away with a shortlist of things that will be of relevance to you in 2022, and as future trends appear, give you tools to help you identify what you should have to worry about.\r\n\r\nVideo: https://youtu.be/MisoW7LHcfE", "recording_license": "", "do_not_record": false, "persons": [{"id": 13, "code": "DXHHJU", "public_name": "Katie McLaughlin", "biography": "Katie ([@glasnt](https://twitter.com/glasnt)) has worn many different hats over the years. She has been a software developer for many languages, systems administrator for multiple operating systems, and speaker on many different topics.\r\n\r\nShe has been a Director of the Django Software Foundation, organised PyCon Australia and DjangoCon Australia, and was a recipient of the O'Reilly Open Source Award in 2017. \r\n\r\nWith an eclectic background covering far closer two decades in the technology industry than she'd care to admit, she's currently a Senior Developer Relations Engineer at Google Cloud, focused on helping Django and Python developers with their managed infrastructure.\r\n\r\nWhen she\u2019s not changing the world, she enjoys cooking, making tapestries, and seeing just how well various application stacks handle emoji.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 278, "guid": "4e828221-f979-5975-a027-70be094a64fd", "logo": "", "date": "2022-09-22T10:05:00+01:00", "start": "10:05", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-278-will-pyscript-replace-django-what-pyscript-is-and-is-not", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/73ZDF9/", "title": "Will PyScript replace Django? - What PyScript is and is not", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "PyScript hit the community like a storm after its announcement and becomes the top trending project on GitHub. It allows the running of Python on the browser. But there\u2019s still some misunderstanding of it. Will it replace all web frameworks? What you can or cannot use PyScript for? Let\u2019s find out.", "description": "In this talk, through some examples and demos of PyScript, we will see how to use it - just include the CDN URL, understand that it is a frontend-only Python that runs on the browser and learn the fact that it can work with javascript in conjunction.\r\n\r\nAfter that, we will look at what is under the hood - Pyodide - which is a Python distribution for the browser. It is what is essential to power PyScript. We will discover what is the difference between using PyScript and Pyodide.\r\n\r\nFinally, we will conclude what is already available in PyScirpt like which library you can run on PyScript and which ones are still yet to come. In the end, we will answer the question - Will PyScript replace Django?\r\n\r\nThis talk is for those who are curious about PyScript and the idea of running Python in the browser in general. We will assume no prior knowledge about it.\r\n\r\nVideo: https://youtu.be/tzRRImsez88", "recording_license": "", "do_not_record": false, "persons": [{"id": 339, "code": "GTVKWZ", "public_name": "Cheuk Ting Ho", "biography": "Before working in Developer Relations, Cheuk has been a Data Scientist in various companies which demands high numerical and programmatical skills, especially in Python. To follow her passion for the tech community, now Cheuk is the Developer Advocate for Anaconda.\r\n\r\nBesides her work, Cheuk enjoys speaking at various conferences. Cheuk also organises events for developers. Cheuk has organised conferences including EuroPython (of which she is a board member), PyData Global and Pyjamas Conf. Believing in Tech Diversity and Inclusion, Cheuk constantly organizes workshops and mentored sprints for minority groups. In 2021, Cheuk has become a Python Software Foundation fellow.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 214, "guid": "cf631b76-f7f5-58a6-a439-2bf375a52807", "logo": "", "date": "2022-09-22T11:15:00+01:00", "start": "11:15", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-214--", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/CUTX7H/", "title": "\ud83d\udc0d \u2764\ufe0f \ud83e\udd80", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "We love writing Python. Yet, sometimes, its performance is not ideal. Instead of going to use C let's use Rust instead.", "description": "Python has several performance problems. Not only its GIL, but also the fact that it's only an interpreted language. Historically, people looked at writing C extensions for performance critical code. C being a dangerous piece of equipment, can nowadays be replaced with Rust. Let's look at what that could possibly mean for the Django environment.\r\n\r\nIn this talk, I'll give a (very) brief introduction into Rust, and then dive right into how the integration works with Python. Lastly, I'll show an example how a \"bit\" of Rust could be used inside Django or inside a Django project.\r\n\r\nVideo: https://youtu.be/1rJ3-0JXqQo", "recording_license": "", "do_not_record": false, "persons": [{"id": 305, "code": "BWWWMK", "public_name": "Markus Holtermann", "biography": "Markus Holtermann works as a team lead and staff engineer at CLADE. He has been a Django core contributor since early 2015. He is a member of the Django security and operations team, as well as an organizer of DjangoCon conferences. Markus has been a project lead at the German ubuntuusers.de community support platform, where he discovered Python and Django in 2010.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 262, "guid": "749ebc10-57b6-5d55-81bf-4c4004dbf8cc", "logo": "", "date": "2022-09-22T11:50:00+01:00", "start": "11:50", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-262-better-managing-i18n-and-po-files", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/HXKMJX/", "title": "Better managing i18n and PO files", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Stop dealing with giant PO files when trying to achieve i18n on your website and start managing them better.", "description": "When dealing with static pages translation in python we have to work with PO files that are the standard way to internationalize our page, however, these files can get pretty big and complex to maintain  (I\u2019ve seen cases where these files have 25k lines of translations), so the idea behind this talk is to share a workflow that can help us to deal with these large files under the philosophy of \u201cdivide and conquer\u201d. In this talk you will learn how to standardize the process for translating your pages and how to stop dealing with those big ugly files by using the polib library, also you will be able to start sending parallel translation projects, saving your organization time and money.\r\n\r\nVideo: https://youtu.be/n_OPN1dH0sM", "recording_license": "", "do_not_record": false, "persons": [{"id": 332, "code": "BK7CRH", "public_name": "Felix Mino", "biography": "I\u2019m Felix Mi\u00f1o, a software developer at stack builders. I have more than 3 years of experience in the industry and I\u2019ve had the chance to work on different projects with different programming languages such as Haskell, TypeScript, and Python. I look forward to sharing what I\u2019ve learned in these years with the software community and from the beginning of 2022 I lead the `Quito Lambda` initiative in Ecuador, which is a space to share mainly functional programming related topics. In my free time, I enjoy cooking and discovering the world through its flavors.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 198, "guid": "b48eb623-2854-5501-9691-c4094ff0d2e2", "logo": "", "date": "2022-09-22T12:25:00+01:00", "start": "12:25", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-198-observe-", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/ZQ8L93/", "title": "Observe!", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "We have a lot of great tools to help us develop Django applications, from tests to the Debug Toolbar. But what happens once you deploy your code to production? In this talk we will go through the options and best practices to make your production environment as friendly as possible.", "description": "Observability is a massive buzzword, let's break it down and see what you need in order to sleep well with code in production. Let's start with the low hanging fruit and work up from there:\r\n\r\n* Is it working? (uptime monitoring)\r\n* What is it doing? (logging)\r\n* How is it doing? (metrics)\r\n* How is it doing it? (APM)\r\n* What just happened? (Gathering errors)\r\n\r\nWe will close up with Tips & Tricks to get the most out of your new observability setup.\r\n\r\nVideo: https://youtu.be/n_OPN1dH0sM", "recording_license": "", "do_not_record": false, "persons": [{"id": 296, "code": "KXEURD", "public_name": "Honza Kr\u00e1l", "biography": "Honza is a Python programmer and Django developer \u2013 since he is scared of the bright and shiny world of browsers, designers, and users he prefers to stay buried deep in the infrastructure code and just provides others with tools to do the actual site-building.\r\n\r\nHe spent 8 years at Elastic, the company behind Elastisearch and is now the CTO of a new startup aiming to improve people's time in meetings.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 275, "guid": "0c416b13-8659-5e2d-b77b-3c23a4d11ce5", "logo": "", "date": "2022-09-22T14:00:00+01:00", "start": "14:00", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-275-how-to-wag-a-dog", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/3KNEEA/", "title": "How to wag a dog", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Dogs wag their tails, and when the opposite happens, it represents distorted priorities and a disturbing, problematic reversal of the proper order. But not when it comes to software and its documentation! I believe that the tail of documentation can and should wag the dog of software, and I'll show just how powerful this tail can be.", "description": "The tail of the dog expresses its disposition and reflects its health, and we expect it to be a reliable outward sign of what's going on inside the dog. We expect the same kind of relationship between software and documentation: that documentation should reliably tell us about the software, providing clear and up-to-date insights into it.\r\n\r\nI think that this is a na\u00efve view of both dogs and software. \r\n\r\nI will discuss, with examples, why it's a problematic idea for documentation. It's not actually true, and failing to recognise this is one reason why documentation is often so bad. Recognising the true nature of the relationship on the other hand puts documentation authors in a much more powerful position than they are usually understood to have - and that's something they can use to their advantage. \r\n\r\nIn other words, the tail is already wagging the dog, and that's the way it should be.\r\n\r\nThis talk is about documentation, but it's also an exploration and critique of some commonly-held ideas about the relationship between supposedly active and creative activities - of which making software is one example - and those seen as more passive and interpretive ones - like documentation.\r\n\r\nAlong the way, this talk will discuss topics including: the relationship between seeing and looking, riding on motorbikes, visiting museums, and why we should reconsider now-discredited pre-Newtonian theories of vision. \r\n\r\nWe'll get from dogs and their tales to an approach to documentation that improves **both** documentation and software, and gives us a tool for reassessing other patterns of work and life too.\r\n\r\nVideo: https://youtu.be/R4O2WoFC-JQ", "recording_license": "", "do_not_record": false, "persons": [{"id": 224, "code": "FDRCZ3", "public_name": "Daniele Procida", "biography": "I'm a Director of Engineering at Canonical, where I am working to transform documentation practice across 40-plus engineering teams. I love Django, DjangoCons and documentation (I am the author of the [Di\u00e1taxis documentation framework](https://diataxis.fr/)).\r\n\r\nI think it would be better to humanise software than softwarise humans.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 237, "guid": "6861aa1e-292b-581e-b70b-bae44749ef22", "logo": "/media/djangocon-europe-2022/submissions/AM3J89/Quality_Assurance_in_DjangoTesting_what_matters_q3C4cfI.png", "date": "2022-09-22T14:35:00+01:00", "start": "14:35", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-237-quality-assurance-in-django-testing-what-matters", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/AM3J89/", "title": "Quality Assurance in Django - Testing what matters", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Writing tests is notoriously cunning - you can do a lot of busy work with little impact on the overall project quality.\r\n\r\nIn this talk, we will slice our Django app in different layers, in order to identify the testing sweet spot, in each of those layers.\r\n\r\nThe final goal - to test what actually matters!", "description": "In software development, having tests is essential.\r\n\r\nAs developers, tests not only help us sleep well at night, but they also allow us to iterate faster & make changes with more confidence.\r\n\r\nIf we want quality, we need tests.\r\n\r\nWhen it comes to writing tests in Django, we often ask ourselves - \u201cWhat to test?\u201d.\r\n\r\nIt\u2019s an important question since we don\u2019t always have the time to test everything we want. Sometimes, we need to make a conscious decision about what to test & what to leave untested.\r\n\r\nWhen making that decision, it\u2019s important to have a good sense of \u201cwhat\u2019s important\u201d, so we can test that.\r\n\r\nDjango gives us plenty of testing tools & a lot of choices for what to test - we can test models, forms, views, APIs, serializers, services, selectors, tasks & basically anything that\u2019s well defined within the Django Framework.\r\n\r\nIn this talk, we\u2019ll do 3 important things:\r\n\r\n1. We\u2019ll put our quality assurance hat on.\r\n2. We\u2019ll explore different real-life scenarios with Django apps.\r\n3. And we\u2019ll see how to approach testing in those scenarios, so we can test the things that matter!\r\n\r\nBy exploring those scenarios, we\u2019ll also touch upon the following topics:\r\n\r\n- Having a test plan.\r\n- Naming conventions for our tests & test methods.\r\n- Django test settings.\r\n- Factories.\r\n- Test speed & optimizations.\r\n\r\nThe talk is going to be practical & pragmatic, giving plenty of examples & references for a follow-up.\r\n\r\nVideo: https://youtu.be/PChaEAIsQls", "recording_license": "", "do_not_record": false, "persons": [{"id": 79, "code": "W7QF7Q", "public_name": "Radoslav Georgiev", "biography": "Generalist. A multi-disciplinary problem solver & a technical team lead.\r\n\r\nCurrently leading & growing teams at HackSoft.\r\n\r\nA programmer from ~10 years, studied Computer Science in the Faculty of Mathematics and Informatics, Sofia University.\r\n\r\nFounder and CEO of HackSoft (Sofia based software company with main focus in Python, Django and Scala) and HackBulgaria (Programming courses, based in Sofia / Bulgaria with main focus of getting the students ready for their first job - either as an intern or a junior developer. Mainly focused in Python and Java)\r\n\r\nAlso doing a lot of teaching - Functional Programming classes (Racket / Haskell) @Faculty of Mathematics and Informatics , Programming with Python and Django @HackBulgaria.\r\n\r\nAn open source contributer to Django Styleguide - https://github.com/HackSoftware/Django-Styleguide\r\n\r\nGitHub - https://github.com/RadoRado/", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 311, "guid": "7f0626fd-2b85-58f8-b1f5-5c90e418ea80", "logo": "", "date": "2022-09-22T15:10:00+01:00", "start": "15:10", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-311-predict-lightning-strikes-using-django-and-aws", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/CQHQEM/", "title": "Predict Lightning Strikes using Django and AWS", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Can you predict lightning strikes using Django and AWS? Yes! Learn how to take an algorithm and idea from a Jupyter Notebook to production ready and cloud native.", "description": "Predicting a lightning strike with 99.6% accuracy requires advanced algorithms, expert developers and data \u2014 a lot of data. FLASH Scientific Technology pulls data from a variety of sources including weather radars and location-specific information like altitude, moisture, wind direction and temperature. It was imperative that FLASH develop an application that could pull, read and process the data both quickly and accurately.\r\n \r\nIn this case study and product demo, you\u2019ll learn how to take an algorithm and idea from a Jupyter Notebook to production ready and cloud native.\r\n \r\n\r\n1. Optimize Python code structure \r\n    1. As the Zen of Python states, \u201csimple is better than complex.\u201d The first part of this presentation will focus on the importance of reviewing and simplifying code to ensure faster data processing speeds and that the code is easy to both read and duplicate.\r\n2. Build fast, efficient and accurate APIs with Django \r\n    1. Once the code is optimized, it\u2019s ready for production. You\u2019ll learn how we built an interface that could both request data from various web services and quickly make accurate predictions using FLASH\u2019s proprietary and patent-issued algorithm. Specifically, this talk will feature:  \r\n        1. best practices and lessons learned, including insight into why we stored all of the Django application elements in a single library; \r\n        2. why all of the data needed to be pulled directly from the cache; and \r\n        3. why the algorithm was kept separate.\r\n3. Deploy serverless and scalable applications using AWS Lambda and AWS Fargate \r\n    1. Finally, this talk will:\r\n        1. showcase how the Django application we built integrates seamlessly with the serverless components of AWS including AWS Lambda and AWS Fargate; \r\n        2. unveil the secrets of building Python Container Images for AWS Lambda (Hint: by using container images for Lambda code vs. manually submitting .zip files we saved significant time, money, and effort. We also reduced errors associated with manual changes.); \r\n        3. review the importance of building applications to be serverless from the beginning. \r\n4. Product Demo \r\n    1. Today, the application \u2014 which initially took minutes to make lightning strike predictions with 99.6% accuracy and a 15- to 25-minute lead time (saving time, money and lives) \u2014 can predict when and where lightning will strike in just seconds. The presentation will conclude with a demo of the product, which is deployed with GitLab CI/CD merge request pipeline.\r\n\r\nBoth beginner and intermediate developers will benefit from this talk, and it is ideal for developers wanting to learn how to use Django for complex predictive-technology projects.\r\n\r\nVideo: https://youtu.be/41S6bwdGHRo", "recording_license": "", "do_not_record": false, "persons": [{"id": 190, "code": "QDNRLH", "public_name": "Calvin Hendryx-Parker", "biography": "Calvin Hendryx-Parker is the co-founder and CTO of Six Feet Up, a Python and Cloud expert consulting company that helps organizations build apps faster, innovate with AI/ML, simplify Big Data, and leverage Cloud technology. At Six Feet Up, Calvin establishes the company's technical vision and leads all aspects of the company's technology development. He provides the strategic vision for enhancing the offerings of the company and infrastructure, and he works with the team to set company priorities and implement processes that will help improve product and service development. \r\n\r\nIn 2019, Calvin was named an AWS Community Hero \u2014 one of only 24 Heroes in North America. He is the founder and host of the Python Web Conference, the largest worldwide event for web developers; the co-founder of IndyPy, the largest Python meetup in Indiana with 1,900+ members; and the founder of IndyAWS, the fastest growing cloud meetup in the state with 800+ members. Additionally, Calvin is the driving force behind LoudSwarm by Six Feet Up, a high impact virtual event platform that debuted in June 2020.\r\n\r\nOutside of work, Calvin spends time tinkering with new devices like the AWS DeepRacer, CircuitPython and Raspberry Pi. He is an avid distance runner and ran the 2014 NYC Marathon to support the Innocence Project. Before the pandemic, Calvin and his family enjoyed annual extended trips to France where his wife Gabrielle, the CEO of Six Feet Up, is from. Calvin holds a Bachelor of Science from Purdue University.\r\n\r\nCalvin is passionate about the open-source community, and he is regularly sought after to share his expertise \u2014 both at international conferences and in the media. Some of his recent contributions include:\r\n\r\n- PyCon (April 2022): Calvin presented \u201cBootstrapping a Local Python Environment\u201d\r\n- Python Web Conference (March 2022): Calvin presented two talks including: \u201cPredict Lightning Strikes using Django and AWS\u201d and \u201cData Pipeline Modernization at Scale\u201d\r\n- Datanami (October 2021): Calvin was featured as an expert in the article, \u201cWhat\u2019s Driving Python\u2019s Massive Popularity?\u201d\r\n- DjangoCon (October 2021): Calvin presented on \u201cBootstrapping your Local Python Environment.\u201d\r\n- PyOhio (August 2021): Calvin presented on how to hack Django Channels to seamlessly integrate Slack into the virtual event platform via \u201cHacking Django Channels for Fun (and Profit).\u201d\r\n- DjangoCon Europe (June 2021): Calvin presented on how to use containers to implement a process that focuses on the developer experience and application delivery via \u201cDeploying a Django Virtual Event Platform Using Containers and Terraform.\u201d  \r\n- App Developer Magazine (May 2021): Calvin shares why Python \u2014 with its \u201cbatteries-included\u201d standard library \u2014 is one of the best languages for both beginner and advanced developers in the article, \u201c4 Reasons Python is Taking Over the World.\u201d\r\n- Cloud Field Day 10 (April 2021): Calvin was selected as a Field Day Delegate and invited to participate in Cloud Field Day 10 \u2014 a multi-day discussion with leaders and product managers from enterprise IT companies including NetApp, Dell Technologies, VMware, Oracle, Scality, Veeam, Intel, Komprise and StorageOS.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 295, "guid": "372607d6-3d73-5244-ba2a-4dfb34559f7c", "logo": "", "date": "2022-09-22T16:15:00+01:00", "start": "16:15", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-295-from-react-to-htmx-on-a-real-world-saas-product-we-did-it-and-it-s-awesome-", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/MZWJEA/", "title": "From React to htmx on a real-world SaaS product: we did it, and it's awesome!", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "We took the plunge and replaced the 2-year-of-work React UI of our SaaS product with simple Django templates and htmx in a couple of months. We\u2019d like to share our experience with you, with concrete indicators on various aspects, and convince your CTO!", "description": "\ud83d\udd0d You\u2019ve probably heard of **[htmx](https://htmx.org)**, maybe seen talks about it (maybe even [right here last year](https://www.youtube.com/watch?v=Zs0DXR1S03M)). Demos are great, potential seems enormous. Maybe you've heard it's great for quick prototyping and tried it.\r\n\r\n\u2753 But what about switching for your real-life project, against everything you\u2019ve heard since 2016 (\u201d*modern web interfaces need Javascript-driven webapps*\u201d, \"*the best SaaS products are made of an SPA*\", etc.)? Does htmx keep its promises? What impact on your product, your team, your business?\r\n\r\n\u2705 That's what we just did at **[Contexte](https://www.contexte.com/)**, by getting rid of the React SPA of a SaaS product. It wasn't a easy decision to make (because the UI holds some fairly complex interactions and we were told such interactions require client-side state management), but it's now such a relief. Maybe if we share our experience the decision would be easier to make for others.\r\n\r\n\ud83d\udcac Draft outline of the talk:\r\n\r\n- **What is Contexte**? mainly about our Product/Tech team size and organization\r\n- **What is our first SaaS product, Contexte Scan** (click [here](https://essai-contexte-com.translate.goog/scan?_x_tr_sl=fr&_x_tr_tl=en&_x_tr_hl=fr&_x_tr_pto=wapp) for a Google-translated product presentation)? a quick demo, with an emphasis on the most complex UI elements (I'm not here to sell it to you \ud83d\ude09 )\r\n- **Our React UI**: bulky, buggy, constantly refactored, dependency hell (quick tour, some figures)\r\n- **Our htmx UI**: a bit of code here, with examples of how you replace client-side state management with just some htmx-loaded HTML fragments\r\n- **Impact on end-users**: same UX, better performances\r\n- **Impact on the team**: faster, fullstack, more agile\r\n- **Impact on the planet**: smaller footprint on end-users computers\r\n- **Conclusion**: go for it!\r\n\r\nVideo: https://youtu.be/3GObi93tjZI", "recording_license": "", "do_not_record": false, "persons": [{"id": 354, "code": "GA3TMV", "public_name": "David Guillot", "biography": "I have been a developer for 15 years. First bare PHP, then PHP/Symfony2, then a bit of Java/SprintBoot, and now happy with Django for the past 5 years.\r\n\r\nI care mainly about building good products with a team I'm proud of being part of.\r\n\r\nI'm also interested on how we can, as software developers, reduce the environmental footprint of what we create.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 296, "guid": "876eaa40-d52a-55a4-aef8-2c8c8d98b59d", "logo": "", "date": "2022-09-22T16:50:00+01:00", "start": "16:50", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-296-the-python-magic-of-django-a-tour-of-the-codebase", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/JCSCHB/", "title": "The (Python) Magic of Django: A Tour of the Codebase", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "This tour of Django's codebase will explain how Django's magic is implemented, covering some of its metaclasses and other special techniques.", "description": "Learning how Django worked under the hood was the thing that gave me the confidence, and more importantly some _guidance_, to use Python's advanced functionality. Advanced things like 'dunder' methods, metaclasses, and even things like iterating through the contents of a module.\r\n\r\nI'll cherry-pick and explain some of Django's more advanced code features, things like:\r\n\r\n* How Django loads code dynamically to put your application and configuration together.\r\n* The `ModelBase` metaclass, and how it attaches magic functonality to your `Model` subclasses.\r\n    * How `__init_subclass__` can be used to provide some or all of this behaviour in Python 3.6+\r\n* How `kwargs` are handled to configure queries and generate SQL.\r\n\r\nAs we look at the code, I'll also cover some of the design decisions that make Django such a joy to work with, without having to understand the implementation details hidden under the hood.\r\n\r\nVideo: https://youtu.be/92l_MyGIulA", "recording_license": "", "do_not_record": false, "persons": [{"id": 53, "code": "WYDHMU", "public_name": "Mark Smith", "biography": "Mark Smith is a Senior Developer Advocate for MongoDB, and lives in Scotland.\r\nHe's been coding and teaching coding for over 25 years.\r\nThese days he specialises in MongoDB, Python, and Rust.\r\nWhen he's not sitting in front of a computer, you'll find him 3D printing, building mechanical keyboards, or doing DIY.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 266, "guid": "b18cd7b0-cf56-536c-b4ad-e90bfe823135", "logo": "", "date": "2022-09-22T17:25:00+01:00", "start": "17:25", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-266-factoryboy-testing-like-a-pro", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/XWUYA8/", "title": "factory_boy: testing like a pro", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "How to test complex objects using the library factory_boy. The lessons I\u2019ve learned using the tool in a Django monolith containing 230+ tables and 75k+ relevant lines of code for over 3 years.", "description": "After working using the factory_boy library for over 3 years on a Django monolith containing +230 tables, +2200 relevant files, and +75k relevant lines of code, I've collected and listed all my biggest learnings.\r\n\r\nIn this presentation, I try to share some of my experiences, showing what I consider to be good practices in using factory_boy in complex systems.\r\n\r\nContent:\r\n\r\n* A short introduction of myself\r\n* factory_boy: what is it? - the definition and the purpose of the tool\r\n* Example application - a quick overview of the application we will use to demonstrate the best practices\r\n* How to install factory_boy\r\n* How to use factory_boy\r\n* Best Practices:\r\n1. Factories must represent their models\r\n2. Do not rely on defaults from factories\r\n3. Factories must have only the required data. if the field is nullable -> under traits.\r\n4. Build over create\r\n5. If FK is in the table -> SubFactory. If FK is in the other table -> RelatedFactory + trait\r\n6. Fixtures only to wrap factories in the test file\r\n7. Avoid using fixtures on shared files like conftest\r\n* Wrapping up\r\n\r\nRepository: https://github.com/camilamaia/factory-boy-best-practices\r\n\r\nVideo: https://youtu.be/-C-XNHAJF-c", "recording_license": "", "do_not_record": false, "persons": [{"id": 334, "code": "TFZN9A", "public_name": "Camila Maia", "biography": "I am a Brazilian software developer that loves to architect systems, create new DevTools, and automate processes. I am a backend developer that loves developing systems using Python or Ruby. \ud83d\udc0d \ud83d\udc8e\r\n\r\nI am truly passionate about sharing knowledge and connecting with people. For the last couple of years, I\u2019ve been focusing increasingly on open source. Open source is where I could find the perfect fit between people connection and coding in my day-to-day. As a result of this effort, my GitHub profile was the first one to be accepted for the GitHub Sponsors program in Brazil, which made me incredibly happy.\r\n\r\nFinally, I am an open-source advocate that does believe in the power of tech communities. People > Tech \ud83d\udc9c", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 401, "guid": "89376be5-11cb-5517-8dee-e76a8792516e", "logo": "", "date": "2022-09-22T18:00:00+01:00", "start": "18:00", "duration": "00:45", "room": "Auditorium", "slug": "djangocon-europe-2022-401-lightning-talks", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/SQ8SUR/", "title": "Lightning Talks", "subtitle": "", "track": null, "type": "Other", "language": "en", "abstract": "Lightning Talks", "description": "Video: https://youtu.be/fOi9K0YuKyI", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}], "Workshops": [{"id": 271, "guid": "65407347-b929-559d-b9e4-e3acdbbace7c", "logo": "", "date": "2022-09-22T11:15:00+01:00", "start": "11:15", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-271-rethinking-forms-in-django", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/TDWUUA/", "title": "Rethinking Forms in Django", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "The Django framework makes it really easy to use Python classes for our data structures and from thereof create forms together with their editors. However, the usability of forms created the Django way have a huge potential to improve their usability. In this talk I will show how to achieve this without the need for JavaScript frameworks and with minimal changes to the existing code base.", "description": "We Django users know well how to create a full-featured editor from a given data structure and without the need of cumbersome HTML coding. This workflow probably is one of the main factors for its success. With the Django-Admin it in fact became so easy to create editors, that out of laziness, they nowadays are used ubiquesly. A prominent proponent adopting this antipattern is Django-CMS.\r\n\r\nOn the other side, features currently offered by Django often are not suitable to create frontend-centric web-applications with a contemporary user interface. This is where Single Page Applications kick in, written in one of the many modern JavaScript frameworks. This may relegate Django to a pure data store, shifting the business logic of an application towards the browser. With the advent of HTMX it seems that this trend is reverting again, since a high level of interactivity can be achieved without going the SPA path.\r\n\r\nOne of the main hurdles remaining is the interactive handling of forms. Remember, that since Django was first released, a lot has changed in HTML 5 and JavaScript. Django however, still relies on a pure HTTP request/response-cycles for form validation and submission. This is where Django can not compete with the usability of JavaScript frameworks, since most of them make heavy usage of the built-in form data processing and validation functions.\r\n\r\nIn this talk I will show how to achieve a user experience equal to that of many contemporary Single Page Applications, but without having to introduce external frameworks and their mindset. This works by using a special webcomponent wrapping one or more Django forms, and letting it handle all the validation, feedback and submission. \r\n\r\nCompared to other solutions, for a developer this approach is almost unintrusive since it is possible to reuse all existing Django Form- and ModelForm classes without any modification. Only the Django Form Views have to be slightly adopted. This proposed solution can handle all input fields and their corresponding widgets, which Django currently offers (except geospacials). With this tool, a developer can create the detail view for a Django model with the same ease, as doing the same task using the Django-Admin. In addition, the counterpart of the StackedInline class can be nested up to an infinite number of levels. It even is possible to create full editable list views for a model.\r\n\r\nThanks to the form field renderer introduced in Django 4.0, the proposed solution works with any of the major CSS frameworks, such as Bootstrap, Bulma, Foundation, Tailwind, UIKit or even your own implementation. This therefore could become a real game changer on how we handle forms with a way better User eXperience.", "recording_license": "", "do_not_record": false, "persons": [{"id": 336, "code": "YFDBYB", "public_name": "Jacob Rief", "biography": "* Full stack Django developer since 2011.\r\n* Author and core maintainer of many popular Django 3rd party libraries, such as django-admin-sortable2, django-sass-processor, django-SHOP, django-entangled, djangocms-cascade and others.\r\n* Django contributor.\r\n* Speaker at DjangoCon Europe 2014 and 2018.\r\n* Currently working at the University of Innsbruck implementing django-CMS as their main content management system.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 333, "guid": "6878223d-7098-5da3-af5f-8e7e4d432179", "logo": "", "date": "2022-09-22T12:10:00+01:00", "start": "12:10", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-333-what-are-development-environments-for-and-why-isn-t-it-simple-to-make-them-", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/7NACE9/", "title": "What are development environments for, and why isn\u2019t it simple to make them?", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "If something is hard to do, you\u2019re unlikely to do it as often as you probably should. Development environments are no exception. How many people on your team have the skills and experience to create staging environments to assess performance and new features?", "description": "Developing Django production applications means running into the same frictions in any other language or framework. To address them, we do DevOps, but executing DevOps isn\u2019t always so simple to do. A limited number of people on the team may have the skills, experience with tooling, or even knowledge of the codebase to provision environments to test or investigate something. \r\n\r\nIt\u2019s limited, usually, to the DevOps engineer. \r\n\r\nWithout them, workflows can get blocked. With them, experimentation can be minimal, because it takes a real person\u2019s time and energy to create the space to do so. The only way to manage all the changes is to stick to an enforced Dev-Stage-Prod workflow, which is the only thing that makes managing this problem across multiple sites possible. \r\n\r\nIn this workshop, we\u2019ll take a look at developing Django applications on Platform.sh, where true staging environments require negligible energy to provision, all within a unified workflow alongside production. \r\n\r\nOnce you've deployed your project, new environments are a git branch away, and disposable if an experiment doesn\u2019t work. You'll add new features and updates in isolation, all while having automatic access to production data.", "recording_license": "", "do_not_record": false, "persons": [{"id": 375, "code": "YAFPEB", "public_name": "Chad Carlson", "biography": "Chad Carlson manages the Developer Relations team at Platform.sh. Chad spent a large portion of his professional career in academia, where he worked primarily with Python in vision science laboratories: investigating how our visual systems detect motion, the relationship between eye movements and natural scene perception, and where reinforcement learning fits into a larger evolutionary context of neuroscience. \r\n\r\nToday he can typically be found writing, cooking, or working on projects in Python, Node.js, Go, and whatever new language Platform.sh starts support for and wants another pair of eyes on.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 283, "guid": "bf50fabe-0720-56ca-abf6-5d2ef84c7bc4", "logo": "/media/djangocon-europe-2022/submissions/CFCFFF/laptop-rocket_iIiyK6R.png", "date": "2022-09-22T14:00:00+01:00", "start": "14:00", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-283-server-side-is-back-baby-optional-just-supported-", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/CFCFFF/", "title": "Server-Side is back, baby! \ud83d\udcbb optional. Just \ud83d\udc40  supported \ud83d\ude0a", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "# Server-side is back, baby!\r\n\\- take a break from Javascript, write your apps with liveviews instead \ud83d\ude80\r\n\r\nIn this tailk, we explore *liveviews* as an alternative to \u201ctraditional\u201d client-side rendering \u2013 a new way of building dynamic user interfaces for the web.\r\n\r\nFirst, we give an introduction to the concept of liveviews and discuss how it differs from server-side rendering and client-side rendering.\r\n\r\nAfter that, we showcase our interpretation of a Django liveview called [Hypergen](https://hypergen.it).\r\n\r\nThen, in the main part of the talk, we build an example app with [Hypergen](https://github.com/runekaagaard/django-hypergen) while discussing some of its architectural choices.\r\n\r\nLast, we open for questions and a more interactive vibe.\r\n\r\nSo are you looking for a break from Javascript, or if you\u2019re just curious about what else is possible with Django, this talk is for you!", "description": "## Sample application\r\n\r\nIf you want to follow along during the livecode session, you can install the sample application by following these [instructions](https://github.com/runekaagaard/hypergen-djangocon-2022). Otherwise just sit back and enjoy the show! \ud83e\udd2f\r\n\r\n## Outline\r\n\r\n1. About Liveviews\r\n    - From pure server side rendering, over jQuery, then React to liveviews. Our evolution of web development.\r\n    - Liveview basics - the what, why, who, where and when.\r\n2. Hypergen\r\n    - Architecture and design choices.\r\n    - Introduction and examples.\r\n3. We build an example app in Hypergen together, showcasing\r\n    - Pure Python HTML templates\r\n    - Base templates and template composition\r\n    - Liveviews\r\n    - Binding to DOM events\r\n    - Actions\r\n    - Partial DOM updates and other client commands\r\n    - Notifications and plugins\r\n4. Q&A", "recording_license": "", "do_not_record": false, "persons": [{"id": 344, "code": "TQQNLD", "public_name": "Rune Kaagaard", "biography": "I've been working as programmer for 15 years, doing Django full time for twelve years. Before getting into programming I worked more than a decade as a piano player, composer and producer. I live on the country side just outside Copenhagen, Denmark with my wife and three girls.\r\n\r\nI love searching for beautiful patterns in the universe. Besides Hypergen I'm currently exploring how to get nested data in and out of the Database. Would love to discuss that with other Django devs ;)", "answers": []}, {"id": 345, "code": "SG3E77", "public_name": "Jeppe Tuxen", "biography": "I've been working professionally with Django since 2014. A game designer by education, but found out that developing web applications with Django is much more fun :-). \r\nFor me nothing beats finding the best solution within a constrained design space, and most of the time Django is my go-to tool.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 274, "guid": "39ee4421-641f-57af-8bf7-89b3f230e319", "logo": "", "date": "2022-09-22T16:15:00+01:00", "start": "16:15", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-274-everything-you-wanted-to-know-about-databases-as-a-developer-but-were-too-afraid-to-ask-your-dba", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/87C7VD/", "title": "Everything You Wanted to Know About Databases as a Developer but Were Too Afraid to Ask Your DBA", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "As a developer you may have little or no training in database administration, yet you want to design applications that interact with databases in the best possible way. This workshop aims to answer all the questions you wanted to ask your DBA but didn't because he/she is too ~~grumpy~~ busy. You will come away with enough information about databases in general, and about PostgreSQL in particular, to sound like an instant database expert (and, more importantly, to create better applications).", "description": "The database forms the backbone of many applications so it\u2019s essential for applications to interact with the database in an optimal way. Unfortunately, database administration doesn\u2019t usually form part of a developer\u2019s training so you may have a wealth of experience and talent in designing and developing applications, yet have little or no database knowledge. There\u2019s probably a database expert in your organisation in the form of a DBA, but this expert is probably too ~~grumpy~~ busy to take the time to explain to you how databases work.\r\n\r\nThis workshop aims to provide you with the minimum that you, as a developer, need to know about databases in general, and about PostgreSQL in particular. You will come away with a \u201cdatabase cheat sheet\u201d of the different terminology and concepts that will make you sound like an instant database expert.\r\n\r\nYou\u2019ll learn to explain with confidence the difference between a database, a database cluster and an instance, how database objects can be partitioned and why you might want to do that, how schemas and tablespaces can be used to group database objects, the different constraints that can be used to enforce the integrity of your data, the difference between a view and a materialized view and much more.\r\n\r\nIf you want to:\r\n1. Understand more about what a database is and how it works\r\n2. Make your database applications better \r\n3. Impress your ~~friends~~ DBA\r\n\r\nthen this presentation is for you.", "recording_license": "", "do_not_record": false, "persons": [{"id": 341, "code": "F9WGV7", "public_name": "Karen Jex", "biography": "Karen is a Senior Solutions Architect with Crunchy Data working with PostgreSQL databases. Prior to that, she was a DBA for 20 years, then a Database Consultant. She was once described as \u201cquite personable for a DBA\u201d which she decided to take as a compliment. Outside of the world of databases she loves cycling, skiing and spending time with her family in the mountains where she lives, and she recently started a part-time PhD in Computer Science.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 248, "guid": "c69b538e-9c82-5302-9084-6de146f748d2", "logo": "", "date": "2022-09-22T17:10:00+01:00", "start": "17:10", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-248-tdd-applied-to-django-api-development", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/UH8KUK/", "title": "TDD applied to Django API development", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "TDD is a software design methodology that is based on first writing tests, then writing source code that successfully passes those tests, and finally refactoring the written code.\r\n\r\nAt the end of the workshop, you will leave knowing which are the steps to follow to make Django API developments with the TDD methodology and be able to apply what you have learned.", "description": "TDD is a software design methodology that is based on first writing tests, then writing source code that successfully passes those tests, and finally refactoring the written code.\r\n\r\nIn this workshop, we propose an exercise oriented to the development of APIs that we will solve using this TDD process. In this way, we will go through each of the steps observing the importance of each one of them. And so we will exemplify our day to day, how with Python we face problems and how TDD helps us to solve them. \r\n\r\nAt the end of the workshop, you will leave knowing which are the steps to follow to make developments with the TDD methodology and be able to apply what you have learned.", "recording_license": "", "do_not_record": false, "persons": [{"id": 325, "code": "AYA3UU", "public_name": "Emilio Carri\u00f3n", "biography": "Staff Engineer @ MercadonaTech. Machine Learning enthusiast. PDD (Python Driven Developer). \r\nDoctoral student @ Universitat Polit\u00e9cnica de Valencia.", "answers": []}], "links": [], "attachments": [], "answers": []}]}}, {"index": 3, "date": "2022-09-23", "day_start": "2022-09-23T04:00:00+01:00", "day_end": "2022-09-24T03:59:00+01:00", "rooms": {"Auditorium": [{"id": 400, "guid": "09c35453-4474-5579-b6fb-69c6628bed19", "logo": "", "date": "2022-09-23T10:00:00+01:00", "start": "10:00", "duration": "00:05", "room": "Auditorium", "slug": "djangocon-europe-2022-400-morning-announcements", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/UVMXJL/", "title": "Morning Announcements", "subtitle": "", "track": null, "type": "Other", "language": "en", "abstract": "Morning Announcements", "description": "", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"id": 199, "guid": "58bc4308-dbcd-5fe1-919f-1d191a72fb2a", "logo": "", "date": "2022-09-23T10:05:00+01:00", "start": "10:05", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-199-async-django-the-practical-guide-you-ve-been-awaiting-for-", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/GKUVAX/", "title": "Async Django: The practical guide you've been **awaiting** for.", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "There\u2019s a lot of excitement about Django going async in 3.0+ but also many questions. This talk will provide a brief introduction to async, cover its pros/cons, and show how to build async into your Django app.", "description": "There\u2019s a lot of excitement about Django going async in 3.0+ but also many questions. This talk will provide a brief introduction to async, cover its pros/cons, and show how to build async into your Django app.\r\n\r\nWe\u2019ll look at four different ways to build a real-time chat app and see how the need for async comes up:\r\n\r\n* Polling \r\n* Long-polling\r\n* Server-sent events\r\n* Websockets\r\n\r\nGetting async online can be the hardest bit, so we\u2019ll wrap up with a few pointers on deployment to get you on your way.\r\n\r\nVideo: https://youtu.be/B5uQPwX4VLo", "recording_license": "", "do_not_record": false, "persons": [{"id": 46, "code": "JHNLPQ", "public_name": "Carlton Gibson", "biography": "Long-time Django user, and current Django Fellow. Husband and father of four, I like cooking, hats, and philosophy. Come say hi!", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 264, "guid": "4443192c-48ae-54d0-a1c2-3603334106ed", "logo": "", "date": "2022-09-23T11:15:00+01:00", "start": "11:15", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-264-run-your-tests-in-hundreds-of-different-environments-fast-i-mean-really-fast-", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/DUVTY3/", "title": "Run your tests in hundreds of different environments fast. I mean really fast.", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "As a Python library author, how do you ensure interoperability with every Python (and Django) version? In this talk, learn how to run your test suite in hundreds of different environments as fast as possible using Pytest, Tox, and GitHub actions.", "description": "The Sentry SDK has to work in basically every Python environment imaginable. From Python 2.7 and Django 1.8 onward, including alternative implementations like PyPy. (And besides Django the SDK supports over fifteen other Python frameworks) Altogether our test suite has to run in a couple of hundred environments.\r\n\r\nAs the test suite and environments grew our test suite slowed down. When it took 35-40 minutes to run the test suite we knew:\r\n\r\nThings had to change. So we rolled up our sleeves and set out to improve our test suite and make it run in under 10 minutes.\r\n\r\nIn this talk, I will present to you our journey. Everything we learned about Pytest, Tox, and GitHub actions to make your test suite run as fast as possible.\r\n\r\nVideo: https://youtu.be/cLptIbomkoM", "recording_license": "", "do_not_record": false, "persons": [{"id": 333, "code": "HKUYXC", "public_name": "Anton Pirker", "biography": "Been a Django Freelancer for over 15 years. Organizer of the Django Meetup Vienna for over 10 years. Since 2022 Senior Software Engineer at Sentry maintaining the Python SDK", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 224, "guid": "6b7c760e-1d9e-52da-af57-65d4ff747a83", "logo": "", "date": "2022-09-23T11:50:00+01:00", "start": "11:50", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-224-handling-django-in-highly-concurrent-scale-environment", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/NJR3PV/", "title": "Handling Django in highly concurrent & scale environment", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Django is very good for getting things started & get going, but when it gets thrown into a highly concurrent & high scale environment then real issues start coming up, and you are often left with your head-scratching as to what is happening & how to deal with it; this talk will discuss some of the issues around concurrency & scale in Django & how did we handle it.", "description": "In this talk, we'll discuss some of the issues that we(@SquadStack) faced when handling Django in a highly concurrent & scalable environment & how did we handle it to the point which satisfied our requirements. This talk will be highly practical in the sense that the presenter will present real-world examples & issues that will come by it and then we'll move towards some of the ideas we can explore to mitigate those issues.\r\n\r\nSome of the ideas we'll explore:-\r\n\r\na) How Django .save() can cause issues in highly concurrent environment.\r\n\r\nb) How Django admin's native search might cause issues in high scaling environment & how to deal with it(hint plugging in ES for search might not be the only solution, there are cheaper ways available)\r\n\r\nc) How to change DB schema at a scale where DB is not the only problem but how do you deal with cached objects.\r\n\r\nd) How to do faster count for Django Admin pages\r\n\r\ne) etc...\r\n\r\nThe solutions presented in the talk might not be perfect but they just seem to work, and might be worth trying.\r\n\r\nVideo: https://youtu.be/ed3-wfDsEXA", "recording_license": "", "do_not_record": false, "persons": [{"id": 314, "code": "BAMWEZ", "public_name": "Tarun Garg", "biography": "I\u2019m currently working as Engineering Manager at SquadStack, I\u2019ve been here since 5 years and have seen the team and processes grow from 3 member engineering team to a now ~50 people engineering team. Being the early member of the engineering team, I got to experience a fair share of challenges and make a lot of mistakes along the way and that\u2019s why I wanted to share those learnings so that other people don\u2019t make those same mistakes and the community keeps on growing :D.\r\n\r\nMore about me? I\u2019ve recently made a step into management and till now(12 months in) I\u2019m liking it; make no mistake it is stressful but rewarding also(in its own way). I love solving people, process & product challenges. When not working I can found reading books, or playing some strategic games like Catan or Chess.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 251, "guid": "e7dc74e7-8ac6-52ff-a171-58051d13ab53", "logo": "/media/djangocon-europe-2022/submissions/FFDXHZ/dddjango_Z6vXPMU.png", "date": "2022-09-23T12:25:00+01:00", "start": "12:25", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-251-a-use-case-of-implementing-domain-driven-design-ddd-in-django", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/FFDXHZ/", "title": "A use case of implementing Domain-Driven Design (DDD) in Django", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Our feedback on integrating some DDD tactical patterns in OSIS, a long-term open-source project for UCLouvain university.", "description": "We had the opportunity to apply DDD to Django in OSIS, a long-term project for managing students and their education for Universit\u00e9 Catholique de Louvain in Belgium. After a year into the project implementing new features, it's time to provide our feedback to the Django community.\r\n\r\nA general outline:\r\n1. Intro to the OSIS project (goal, short history, actors, domain)\r\n2. The why and when for choosing DDD\r\n3. Common tactical patterns to implement in Python/Django\r\n4. Recap and conclusion on our DDD usage and where to go from there\r\n5. Questions\r\n\r\nThe project is open-sourced at https://github.com/uclouvain/  along with its numerous submodules which I will present shortly in the first part. I will take some time to explain the concepts of onion architecture and some DDD design pattern so it should be accessible enough for Django beginners. The code is not the key, but rather think communication and comprehension!\r\n\r\nEdit post-talk: the slides that were presented are at https://sebcorbin.github.io/ddddjango/\r\n\r\nVideo: https://youtu.be/t5DBiKsjvS4", "recording_license": "", "do_not_record": false, "persons": [{"id": 327, "code": "9UXNGR", "public_name": "SebCorbin", "biography": "Swam in open-source from day 1 of my developer life, never sank thanks to the community. Went from PHP/Drupal to Python/Django, never went back!", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 397, "guid": "11caee67-c26d-53bb-8a5a-e009e359d1d3", "logo": "", "date": "2022-09-23T14:00:00+01:00", "start": "14:00", "duration": "01:00", "room": "Auditorium", "slug": "djangocon-europe-2022-397-keynote-growing-pains-of-an-open-source-project", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/MBVCJ3/", "title": "Keynote: Growing pains of an open source project", "subtitle": "", "track": null, "type": "Keynote", "language": "en", "abstract": "A discussion of how open source software projects are managed, through the lens of an eventually-popular open source software project.", "description": "This keynote will explore how the needs of an open source software project changes as it grows. The talk will focus on the choices that open source project maintainers must make and the things they need to do to maintain the project and foster a healthy community.\r\n\r\nYou will come away with a better understanding and appreciation of the effort that goes into building and maintaining an open source software project and, perhaps more importantly, the community around it.\r\n\r\nVideo: https://youtu.be/TRK6C09JHVc", "recording_license": "", "do_not_record": false, "persons": [{"id": 415, "code": "JTPGLH", "public_name": "Pradyun Gedam", "biography": "Pradyun Gedam is a contributor to many foundational projects in the Python ecosystem.\r\n\r\nHe is a maintainer of many Python packaging tools (including pip, Flit, packaging and installer), many pieces of Sphinx's ecosystem (including Furo, sphinx-autobuild, sphinx-theme-builder and sphinx-themes.org) and the TOML language specification. He is also a CPython triager, a PyPI moderator, a member of the Python Packaging Authority, a member of the Executable Books project, and a PSF Fellow.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 280, "guid": "7f530ea4-6fdd-515b-a6c1-45cd0aaf6b0c", "logo": "", "date": "2022-09-23T15:00:00+01:00", "start": "15:00", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-280-data-oriented-django", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/B7GSRY/", "title": "Data-Oriented Django", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Data-Oriented Design focuses on how software transforms specific inputs to specific outputs, on specific hardware. This talk will cover how this way of thinking can inform writing Django code.", "description": "My high school class defined computing as: software controlling hardware to consume input data and emit output data. Simple enough that I still remember it.\r\n\r\nData-Oriented Design invites us to take this definition seriously. Users only care about convenient input, correct output, as fast as possible. Many abstractions we reach for can hold us back from reaching these goals.\r\n\r\nThis talk will first look at Data-Oriented Design through some general examples, including speeding up JSON parsing in C++ more than 50x. It will then show some Django data patterns that can make our code small and fast, such as normalization, reducing memory usage, splitting models, and techniques for getting the database to do as much work as possible.\r\n\r\nVideo: https://youtu.be/gfPNeQR1aSc", "recording_license": "", "do_not_record": false, "persons": [{"id": 34, "code": "SWZZCW", "public_name": "Adam Johnson", "biography": "I'm an author and solo consultant working with Ansible, AWS, Django, and Python.\r\n\r\nI'm a member of the Django project Technical Board (2.2 through 4.x release cycles), and a co-organizer of the The London Django Meetup.\r\n\r\nI'm based in London, UK, and am often in Lisbon, PT.\r\n\r\nI drink tea, and especially enjoy a genmaicha.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 309, "guid": "aadccf50-5f24-5653-a882-938d9bff89a4", "logo": "", "date": "2022-09-23T16:00:00+01:00", "start": "16:00", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-309-why-would-anyone-use-snowflake-as-a-backend-for-django-", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/BSFVSC/", "title": "Why would anyone use Snowflake as a backend for Django?", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "The natural backend for Django is an OLTP database (MySQL, PostgreSQL), but a growing number of people and companies insist on having a mainly OLAP backend for Django (like Snowflake) . This is a talk on why and the remarkable progress so far.", "description": "In this talk we are going to review the progress on making Snowflake a worthy backend for Django:\r\n\r\n- Review of community and customer demand for a Snowflake backend for Django.\r\n- Review of the multiple independent implementations created.\r\n- Overview of the corporate-sponsored open-source development that Cedar Cares sponsored Tim Graham (Django Fellow 2014-2019) to develop.\r\n- Review of the Snowflake architecture, upcoming features, and how it matches the Django roadmap.\r\n- Forward looking opportunities for the Django community and Snowflake.\r\n\r\nVideo: https://youtu.be/1n_umQuGCEI", "recording_license": "", "do_not_record": false, "persons": [{"id": 361, "code": "AWSKAJ", "public_name": "Felipe Hoffa", "biography": "Felipe Hoffa is Snowflake\u2019s Data Cloud Advocate since 2020. Previously he was at Google, as a Developer Advocate on Data Analytics for BigQuery, after joining as a Software Engineer. He moved from Chile to San Francisco in 2011. His goal is to inspire developers and data scientists around the world to analyze and understand their data in ways they never could never before. You can find him on social media (@felipehoffa, LinkedIn), elsewhere around the web (YouTube, Reddit, StackOverflow, \u2026), and conferences around the world.\r\n\r\nFollow Felipe at https://twitter.com/felipehoffa.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 206, "guid": "323e2c07-5e38-5b1d-bb89-0d9edcc160e5", "logo": "", "date": "2022-09-23T16:35:00+01:00", "start": "16:35", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-206-how-to-facilitate-sponsorships-for-open-source-projects", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/BDATHF/", "title": "How to facilitate sponsorships for open source projects", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "We discuss financial sponsorships in open source project, from the point of view of open source maintainers: When and how to introduce sponsorships, what to offer, how to make it easy for companies to pay, and how to get paid as a maintainer.", "description": "In this session, we will present the audience with the ins and outs of managing sponsorships for a project, and answer questions such as:\r\n\r\n- When is it worth introducing sponsorships in an open source project?\r\n- How to make it as easy as possible for companies to pay?\r\n- What to offer to enterprise sponsors?\r\n- How to transparently manage and redistribute the money?\r\n\r\nWe will present [OpenCollective](https://opencollective.com/) and introduce the audience to the legal and financial problems it solves.\r\n\r\nThe author of this talk maintains [dj-stripe](https://dj-stripe.dev/), a Stripe-sponsored Django project that has redistributed money to multiple developers, maintainers, contractors and organizations for paid work.\r\n\r\nVideo: https://youtu.be/_8joxlHeN3o", "recording_license": "", "do_not_record": false, "persons": [{"id": 302, "code": "ZQSWKV", "public_name": "Deleted User", "biography": "Jerome Leclanche is a tech consultant who discovered Django in 2008, before the 1.0 release. He has authored multiple popular Django libraries and currently maintains dj-stripe, the Stripe integration for Django.\r\n\r\nHe now specializes in fintech and is co-founder and Chief Technology Officer at [Ola](https://olainvierte.com), a financial education and accessibility app for US hispanics.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 276, "guid": "bc571993-ec98-50cb-9abe-170ca5d422e9", "logo": "", "date": "2022-09-23T17:10:00+01:00", "start": "17:10", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-276-foundational-knowledge-the-why-and-how-of-the-django-software-foundation", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/8ZG8XV/", "title": "Foundational Knowledge: The Why and How of the Django Software Foundation", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Discussing why the Django Software Foundation exists, what it does, and ways it may evolve over the next decade", "description": "The Django Software Foundation's mission is to promote, support, and advance its open-source project: in our case, the Django Web framework.\r\nThis talk will discuss how the foundation came about, how it works to satisfy it's mission, and how it and the community can remain relevant and vibrant well into the future.\r\n\r\nVideo: https://youtu.be/uJnaEZkoVTg", "recording_license": "", "do_not_record": false, "persons": [{"id": 343, "code": "NAEWY9", "public_name": "Chaim Kirby", "biography": "Chaim Kirby is the Vice President of the Django Software Foundationm engineering leader with over 20 years experience building complex we applications, and an administrator of a python focused slack with over 40,000 registered users. He's been working with Django since v1.1 and been a community participant since 2014.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 402, "guid": "b071d32c-5e0f-5dce-8092-7749b95f1db3", "logo": "", "date": "2022-09-23T17:45:00+01:00", "start": "17:45", "duration": "00:30", "room": "Auditorium", "slug": "djangocon-europe-2022-402-lightning-talks", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/PAZ3GV/", "title": "Lightning Talks", "subtitle": "", "track": null, "type": "Other", "language": "en", "abstract": "Lightning Talks", "description": "Video: https://youtu.be/c6X9cSP6AZo", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"id": 404, "guid": "b118e1ef-3e6b-5f73-aa8a-e4ae778492a8", "logo": "", "date": "2022-09-23T18:15:00+01:00", "start": "18:15", "duration": "00:15", "room": "Auditorium", "slug": "djangocon-europe-2022-404-closing-session", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/3CEKKZ/", "title": "Closing Session", "subtitle": "", "track": null, "type": "Other", "language": "en", "abstract": "Closing Session", "description": "Video: https://youtu.be/z42Jx1Tro3Y", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}], "Workshops": [{"id": 289, "guid": "6cef05fd-2e0f-5c34-b319-32652009e6a1", "logo": "", "date": "2022-09-23T11:15:00+01:00", "start": "11:15", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-289-everything-you-didn-t-want-to-know-about-cross-site-request-forgery-csrf-in-django", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/LWJHYJ/", "title": "Everything you didn't want to know about Cross-site Request Forgery (CSRF) in Django", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "Have you ever wondered what Cross-site Request Forgery is all about? Did you solve your CSRF problem in your single-page application by copy-pasting something from StackOverflow or decorating all your views with csrf_exempt without knowing what these things are actually doing? If so, this talk is for you.", "description": "In this talk, we will unwrap an underestimated class of security vulnerabilities and explore what Cross-site Request Forgery (CSRF) is all about, what can (and can't) be used to protect against CSRF attacks and how Django (REST Framework) deals with all of it.\r\n\r\nIf that sounds scary, don't worry. I promise you, your application's business logic is harder to understand than this. After this talk, you won't be confused by CSRF ever again.\r\n\r\n**What is Cross-site Request Forgery (CSRF) all about?**\r\n\r\nWe will explain the attack flow, involved parties and components in-depth and try to illustrate why protecting against CSRF is so important. We will tinker with some easy to understand examples to explain all of it. The example project will be shared after the talk so that you can try all of it at home. After all, one of the best ways to learn is to experiment!\r\n\r\n**What can (and can't) be used to protect against CSRF attacks?**\r\n\r\nEquipped with the knowledge of what Cross-site Request Forgery is, we will talk about the current best practices to prevent CSRF attacks.\r\n\r\n**How do Django & Django REST Framework prevent CSRF attacks?**\r\n\r\nIn the final, and biggest section of the talk, we will have a look at what Django and Django REST Framework provide to protect our applications against CSRF attacks. We will explain the most important settings and how to configure the system properly. A particular focus will be placed on Single-Page applications, since it's harder and more complex to get this setup up and running.\r\n\r\n\r\n\r\nYou should have a basic understanding of how Django and web applications, including HTTP, HTML and JavaScript work. If you have completed the official Django and Django REST Framework tutorial, you should be able to follow this talk quite easily.\r\n\r\n\r\n**Here the link to the slides and projects: https://www.andreas.earth/s/djangocon-22/**", "recording_license": "", "do_not_record": false, "persons": [{"id": 348, "code": "8AHFEQ", "public_name": "Andreas Schmitz", "biography": "Andreas is a lead software development engineer at wirbauen.digital GmbH, a German Construction Tech startup that tries to digitize the construction industry.\r\n\r\n- **Personal Website**: [www.andreas.earth](https://www.andreas.earth)\r\n- **LinkedIn**: [www.linkedin.com/in/andreas-schmitz-2198a6125](https://www.linkedin.com/in/andreas-schmitz-2198a6125)\r\n- **Company Website**: [www.wirbauen.digital](https://www.wirbauen.digital)", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 298, "guid": "f8dd127a-2130-588e-a0fa-4efb1832db53", "logo": "", "date": "2022-09-23T12:10:00+01:00", "start": "12:10", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-298-what-s-happening-and-what-do-i-do-about-it-", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/USKUG9/", "title": "What\u2019s happening and what do I do about it?", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "In this fun and interactive workshop you\u2019ll identify your Top Two Values and how they simplify EVERYTHING.", "description": "**\u201cWhat do I do?\u201d is an assessment we make 1000x a day.**\r\n\r\nWhen your top values are clear, your options are, too.\r\n\r\nOnce you understand why things drive you the way they do, you take the wheel.\r\n\r\nYou can suddenly diagnose:\r\n\r\n* Why your day doesn\u2019t feel great.\r\n* Why things aren\u2019t working.\r\n* Why you\u2019re not getting back what you put in.\r\n* Why you\u2019re not feeling satisfied, even when you\u2019ve done all the things.\r\n* What\u2019s happening.\r\n* Now what? \r\n* What leap to take.\r\n* What decision feels right.\r\n* How to handle things.\r\n\r\nIt\u2019s a super power you can apply to any situation.\r\n\r\n**In this session, you\u2019ll identify:**\r\n\r\n* Your top two personal values\r\n* How to use creativity to get clarity\r\n* How to quickly make decisions that create impact\r\n\r\nIf you feel professionally or personally unsatisfied, want more ease around decisions, or are searching for ways to create impact  \u2013 this session is for you.\r\n\r\nJoin Certified Executive + Founder Coach & Master Workshop Facilitator  Angela Parker for this unique session that will help you get clear and will inspire you to take action.", "recording_license": "", "do_not_record": false, "persons": [{"id": 356, "code": "ZJXF8D", "public_name": "Angela Parker (she/her)", "biography": "Angela Parker is a Certified Executive Coach & Master Workshop Facilitator who teaches founders, leaders, and entrepreneurs how to heal, lead, and scale with ease. \r\n\r\nShe designs and facilitates impactful in-person and on-line workshops, masterminds, and experiences for leaders and teams.\r\n\r\nAngela founded the largest outdoor fitness program in Santa Monica, California. In 2018 she sold it to focus full-time on coaching leaders and facilitating workshops internationally. She\u2019s known for her empathy, intuition, directness, humor, and ability to thread the most impactful details into all her sessions.  \r\n\r\nAngela splits her time between Los Angeles, Chicago, Japan, and a tiny village in the Italian Alps.\r\n\r\nhttps://angelaparker.com \r\n@AngelaParkerFIT", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 185, "guid": "4e23451e-5555-52f1-b1b3-d6f45fb795fb", "logo": "/media/djangocon-europe-2022/submissions/ADHERT/WorkShopDjango_wKM6nRd.jpg", "date": "2022-09-23T14:50:00+01:00", "start": "14:50", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-185-creating-of-really-multilingual-django-project", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/ADHERT/", "title": "Creating of really multilingual Django project", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "Check all milestones of multilinguale Project in 60 min.", "description": "In this workshop, i take a own Django-TOF opensource project and create small Really Multilang Project, how it should be, to avoid problem in future.\r\n\r\n1. Starting a multilingual Django project. What we should not forget.\r\n2. Static translated texts of the project. What's wrong with i18n.\r\n3. Problems with Automatic Translation.\r\n4. Why translatable dynamic content will not translate properly.\r\n5. Why not existing Django/Python multilingual solutions?", "recording_license": "", "do_not_record": false, "persons": [{"id": 285, "code": "JUGPGE", "public_name": "Maxim Danilov", "biography": "23 Years in software development, 8 years with Django.\r\nProgramming languages stack: RISC Assembly Language, C, ASP, VB/VBA, PHP, HTML/CSS, VueJS/NuxtJS, Python\r\nProbably, i have the best knowledge in raw Django in Russian community.\r\nI live in Austria in Tirol. I am also Alpine Ski and x-cross-country Instructor.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 219, "guid": "8fb290ba-c126-5f3d-82a1-39e97562aa42", "logo": "", "date": "2022-09-23T16:00:00+01:00", "start": "16:00", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-219-understanding-everything-your-django-code-is-doing-at-runtime-using-kolo", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/RFFG3Z/", "title": "Understanding everything your Django code is doing at runtime using Kolo", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "Reading and understanding existing code is a big part of work as software developers. We're constantly exploring code that we did not write and are not familiar with. Yet the tools we have for this frequent task leave a lot to be desired. In this talk we explore how we can use runtime inspection and Kolo to observe what our Django app is doing while running and how that can help us rapidly build a strong mental model that we can then draw on when writing new code.", "description": "One of the most time consuming aspects of creating great software is reading and understanding the code we're extending or building on top of. In fact, some say that for every 1 new line of code that we write, we first read and understand 10 other lines of code. Yet we seem to have few tools that really help us read, learn, and understand existing codebases.\r\n\r\nThis talk discusses how more often than not, we rely on our own imagination and brain power to understand and explore our codebases. We talk about where debuggers can be useful and the many places where they fall short and actually slow down our learning process.\r\n\r\nWe explore the inspection of runtime data and observing what our code is actually doing as a potential approach to speed up how quickly we can learn and understand a codebase. Specifically we look at all the information we can observe and visualise during a Django HTTP request/response cycle to help us understand everything that our code is doing.\r\n\r\nFinally, we think about where else we could apply this idea of \"runtime inspection\" to solve other problems: Could this approach help us generate test cases? Or at least help us write test fixtures more quickly? Could it help us notice more quickly when our SQL queries are not efficient? And much more\r\n\r\n\r\n**Outline**\r\n1. The problem with reading and understanding code\r\n2. Inspecting runtime data as a potential solution\r\n3. Demo of Kolo: What can Kolo do today?\r\n4. The Glorious Future of collecting, inspecting, and visualizing our code at runtime", "recording_license": "", "do_not_record": false, "persons": [{"id": 309, "code": "FDSMFS", "public_name": "Wilhelm Klopp", "biography": "Wil is the founder of Simple Poll, one of the most popular apps for Slack, which he develops with his small remote team. Wil loves Django, so naturally Simple Poll was created as a Django app 6 years ago.\r\n\r\nOver the past two years, he has been exploring how to improve his own Django development workflow with a side project called Kolo. Kolo is a Django middleware and VSCode extension that shows you everything your Django app is doing as it\u2019s running, making it much faster to ramp up on unfamiliar code and understand whats happening.\r\n\r\nWil lives in London with his partner Emily and puppy Ada.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 265, "guid": "986710b3-dcd5-5334-8da7-e03fdb076f90", "logo": "/media/djangocon-europe-2022/submissions/AFYRWB/logo-white-on-black_0THqIk0.png", "date": "2022-09-23T16:55:00+01:00", "start": "16:55", "duration": "00:50", "room": "Workshops", "slug": "djangocon-europe-2022-265-automated-integration-testing-and-live-documentation-for-your-django-apis-with-scanapi", "url": "https://pretalx.evolutio.pt/djangocon-europe-2022/talk/AFYRWB/", "title": "Automated Integration Testing and Live Documentation for your Django APIs with ScanAPI", "subtitle": "", "track": null, "type": "Workshop", "language": "en", "abstract": "In this workshop we will learn how to create automated integration tests for a REST API using ScanAPI. We will learn how to configure the library, to define the endpoints to be hit, the expected behaviors for each response, how to run the tests and how to access the generated report - which might be used as the API documentation itself.", "description": "One of the most common use cases of Django is to create REST APIs, especially using the Django REST framework. When creating APIs, we need to ensure the endpoints are working properly, as expected. To ensure they do, in fact, what they should do.\r\n\r\nScanAPI is an open-source Python library that was created to help in this task. ScanAPI provides an easy way to create integration tests for REST APIs via configuration files. Given an API specification, written by the user in YAML/JSON format, the library hits the specified endpoints, runs the test cases, and generates a detailed report of this execution - that can be also used as the API documentation itself.\r\n\r\nAfter a short intro of what ScanAPI is and what was the motivation to create it (5 min), we go over the following topics\r\n\r\n- Short Intro about the API we will test and document\r\n- Setup - Installation + configure the project name\r\n- Document and test the first endpoint\r\n- How to use environment variables\r\n- How to hide sensitive information in the reports\r\n- How to chain requests\r\n- How to use nested endpoints\r\n- How to use default values\r\n- How to split the specification file into multiple files\r\n- Quick overview about how to use custom reports\r\n- Quick overview about how to add ScanAPI to a pipeline\r\n\r\nScanAPI Links:\r\n\r\n- GitHub Organization: https://github.com/scanapi\r\n- Website: https://scanapi.dev\r\n- Twitter: http://twitter.com/scanapi_", "recording_license": "", "do_not_record": false, "persons": [{"id": 334, "code": "TFZN9A", "public_name": "Camila Maia", "biography": "I am a Brazilian software developer that loves to architect systems, create new DevTools, and automate processes. I am a backend developer that loves developing systems using Python or Ruby. \ud83d\udc0d \ud83d\udc8e\r\n\r\nI am truly passionate about sharing knowledge and connecting with people. For the last couple of years, I\u2019ve been focusing increasingly on open source. Open source is where I could find the perfect fit between people connection and coding in my day-to-day. As a result of this effort, my GitHub profile was the first one to be accepted for the GitHub Sponsors program in Brazil, which made me incredibly happy.\r\n\r\nFinally, I am an open-source advocate that does believe in the power of tech communities. People > Tech \ud83d\udc9c", "answers": []}], "links": [], "attachments": [], "answers": []}]}}]}}}